Comprehensive Printable Setup & Mitigation Guide
Tailored to Your Available Resources, Constraints, and Suspected UEFI Rootkit Scenario

⸻

Table of Contents
	1.	Introduction & Objectives
	2.	Inventory of Resources & Constraints
	3.	Primary Mitigation Plan
3.1. Stage 1: Establish a “Clean” Windows 11 Workstation
3.2. Stage 2: Harden the New Windows 11 Install
3.3. Stage 3: Download & Verify OS ISOs
3.4. Stage 4: Create Verified USB Installers
3.5. Stage 5: Reflash ProBook BIOS & Reinstall Linux
3.6. Stage 6: Build a Custom Router/Access Point
3.7. Stage 7: Network Segmentation & Secure Device Integration
3.8. Stage 8: Quarantine, Analyze, and Restore Mobile Devices
3.9. Stage 9: Forensic Evidence Collection & Logging
	4.	Alternative Methods & Fallbacks
4.1. If Windows 11 DVD Fails or Is Unavailable
4.2. If Partner’s PC Is Suspected Infected
4.3. If BIOS Reflash Fails
4.4. If No Salvageable Hardware for Router/AP
4.5. If You Cannot Download on Phone or Public PC
	5.	Budget‑Friendly Hardware & Sourcing Tips
	6.	Final Checklist & Summary

⸻

Introduction & Objectives

You suspect a persistent, cross-platform UEFI rootkit that survives OS wipes, appears on multiple machines (Windows, Linux, macOS, iOS), and uses hidden EFI filesystems for persistence. Your goal is to:
	•	Contain and begin rebuilding a “clean room” from your limited resources.
	•	Break the infection chain using only hardware you already own or can salvage on a tight budget.
	•	Create verified OS install media (Linux, Windows, Coreboot) without a known-clean PC.
	•	Reflash compromised firmware, rebuild key machines (ProBook, partner’s PC, router), and isolate the network.
	•	Provide alternatives for every major step in case something fails or you lack a tool.

Constraints:
	•	All existing PCs, phones, and media may be infected.
	•	You have a sealed OEM Windows 11 DVD (most likely clean).
	•	You have a FreeDOS + BIOS disc (factory-supplied for your partner’s PC).
	•	Limited disposable income: must salvage old hardware where possible.
	•	No immediate access to a guaranteed-clean machine.

⸻

Inventory of Resources & Constraints

Hardware On Hand
	•	Partner’s PC (Windows 11 machine, can be wiped).
	•	Sealed OEM Windows 11 DVD (assumed clean).
	•	Factory BIOS/FreeDOS repair disc for Partner’s PC (contains FreeDOS + BIOS ISO).
	•	HP ProBook 6460b (primary laptop suspected compromised).
	•	Assorted old PCs, laptops, and routers for potential reuse.
	•	iPhone/iPad(s) (suspected infected).
	•	Win11 OEM DVD on order (arriving soon).

Existing Media (Possibly Infected)
	•	macOS install DVD or USB
	•	Fedora 42 KDE USB
	•	Windows 11 install USB (if any)
	•	USB drives, external HDDs/SSDs (unknown state)

Constraints
	•	No verified-clean device to start; must bootstrap trust.
	•	Limited funds, must salvage or reuse hardware.
	•	Suspected UEFI rootkit means firmware-level persistence.
	•	Potential iOS firmware compromise on iPhones/iPads.
	•	Need to download new ISOs at a secure location (e.g., community college).

⸻

Primary Mitigation Plan

Stage 1: Establish a “Clean” Windows 11 Workstation

1.1 Gather & Prepare
	1.	Collect:
	•	Partner’s PC
	•	Sealed OEM Windows 11 DVD
	•	FreeDOS/BIOS DVD
	•	Two empty USB drives (minimum 8 GB each), ideally brand‑new or low‑value.
	•	Power adapter and any needed cables.
	2.	Disconnect Partner’s PC from any network (Wi-Fi & Ethernet). Unplug physically.
	3.	Label a USB stick “TOOLBOX” and the other “INSTALLER” with a permanent marker.

1.2 Boot & Wipe Partner’s PC
	1.	Insert the OEM Windows 11 DVD into the optical drive.
	2.	Power on, press [F12] (or your PC’s Boot Menu key) and choose to boot from the DVD.
	3.	When the Windows installer screen appears:
	•	Choose “Install Now.”
	•	Accept license terms.
	•	When asked “Which type of installation?”, choose Custom (Advanced).
	•	Delete every partition on the internal drive until you see only unallocated space.
	•	Click New, let Windows create its standard partitions (EFI, MSR, Microsoft Reserved, C:).
	•	Proceed with install on the newly created C: partition.

 ⚠️ This step completely wipes the previous Windows environment, removing any disk-based malware.

1.3 Complete the Windows 11 Install (Offline)
	1.	When the OOBE (Out‑Of‑Box Experience) prompts appear:
	•	Do not connect to Wi‑Fi.
	•	Create a local user account—no Microsoft Account login.
	•	Skip any suggested Cortana or OneDrive prompts.
	•	Set a simple offline-only name and temporary password (e.g., “AdminUser” / “TempPass123!”).
	2.	Once at the Windows 11 desktop:
	•	Open Settings → Accounts → Sign-in options; disable any auto-login features or PIN.
	•	Open Settings → Privacy & security → Diagnostics & feedback; set to “Required diagnostic data” or “Off” if allowed.
	•	Turn off location services: Settings → Privacy & security → Location → Toggle off.
	3.	Do not enable Internet yet. Leave Wi‑Fi adapter disabled in Device Manager for now.

⸻

Stage 2: Harden the New Windows 11 Install

2.1 Disable Unnecessary Hardware & Services
	1.	Open Device Manager (Win+X → Device Manager).
	•	Expand Network adapters; right‑click and Disable Wi‑Fi and Bluetooth adapters.
	•	Expand Other devices or Unknown devices; if no drivers are loaded, consider disabling to avoid rogue hardware.
	2.	Open Services (Win+R → services.msc):
	•	Disable (set Startup type to Disabled or Manual):
	•	Bluetooth Support Service
	•	Windows Update (we’ll update later manually)
	•	Remote Registry
	•	Remote Desktop Services
	•	Xbox services (if any), Diagnostics Tracking
	3.	Restart to ensure disabled settings stick.

2.2 Install Minimal Security Tools (Offline)
	1.	From public location or community college, download onto a USB (the TOOLBOX stick):
	•	Gpg4win (latest version)
	•	7‑Zip Portable (for extracting archives)
	•	Rufus Portable (for USB burning)
	•	Coreutils for Windows (includes sha256sum)
	•	Sysinternals Suite (extract only Sigcheck and TcpView)
	2.	On your new Windows desktop:
	•	Plug in TOOLBOX USB.
	•	Install Gpg4win from the USB.
	•	Copy Coreutils folder to C:\Tools\Coreutils (no install, just extract).
	•	Copy Sigcheck.exe and TcpView.exe to C:\Tools\Sysinternals\.
	3.	Add C:\Tools\Coreutils to your PATH (Control Panel → System → Advanced system settings → Environment Variables).
	•	Append ;C:\Tools\Coreutils to the Path variable.

⸻

Stage 3: Download & Verify OS ISOs

3.1 Plan for Secure Download
	1.	Target ISOs to fetch:
	•	Fedora 42 Workstation Live (x86_64)
	•	Coreboot packaged files (BIOS replacement)
	•	(Optional) Ubuntu/Debian Netinstall for router builds
	•	(Optional) Windows 11 ISO from Microsoft (in case DVD fails)
	2.	Download environment:
	•	Use the Win11 workstation with Ethernet only, connected to a trusted network (prepaid LTE hotspot or community college LAN).
	•	If using a hotspot:
	•	Activate a prepaid eSIM on a device you consider minimally trusted (freshly reset iPhone in airplane mode until needed).
	•	Do not connect any other infected devices to that same network.

3.2 Download Fedora ISO & Signature
	1.	Open Command Prompt (as Administrator):

cd %USERPROFILE%\Downloads
curl -O https://download.fedoraproject.org/pub/fedora/linux/releases/42/Workstation/x86_64/iso/Fedora-Workstation-Live-x86_64-42-1.6.iso
curl -O https://download.fedoraproject.org/pub/fedora/linux/releases/42/Workstation/x86_64/iso/Fedora-Workstation-Live-x86_64-42-1.6.iso.sig
curl -O https://download.fedoraproject.org/pub/fedora/linux/releases/42/Workstation/x86_64/iso/Fedora-Workstation-Live-x86_64-42-1.6.CHECKSUM


	2.	Import Fedora’s GPG key:

cd C:\Tools\Sysinternals
gpg --keyserver hkps://keys.openpgp.org --recv-keys AA8E81B433777CD1


	3.	Verify the signature:

cd %USERPROFILE%\Downloads
gpg --verify Fedora-Workstation-Live-x86_64-42-1.6.iso.sig Fedora-Workstation-Live-x86_64-42-1.6.iso

	•	You should see “Good signature from ‘Fedora 42 Automatic Signing Key’.” If not, abort and re‑download.

	4.	Check the SHA256 checksum:

cd %USERPROFILE%\Downloads
sha256sum Fedora-Workstation-Live-x86_64-42-1.6.iso > hash_output.txt
type Fed*.CHECKSUM | findstr /C:"(Fedora-Workstation-Live-x86_64-42-1.6.iso)" >> hash_output.txt
fc /nocase hash_output.txt

	•	Compare printed hash lines; if they match exactly, good to proceed.

3.3 Download Coreboot Files & Signature
	1.	From Coreboot’s official site:

curl -O https://coreboot.org/releases/4.17/coreboot-4.17.tar.xz
curl -O https://coreboot.org/releases/4.17/coreboot-4.17.tar.xz.sig


	2.	Import Coreboot’s public key (fingerprint should come from official website):

gpg --keyserver hkps://keys.openpgp.org --recv-keys <COREBOOT_KEYID>


	3.	Verify signature:

gpg --verify coreboot-4.17.tar.xz.sig coreboot-4.17.tar.xz


	4.	(Optional) Verify SHA256 with official checksum file if available similarly.

⸻

Stage 4: Create Verified USB Installers

4.1 Prepare USB Drive (“INSTALLER”)
	1.	Insert the INSTALLER USB (8 GB or larger).
	2.	Open Rufus Portable from TOOLBOX USB.
	•	Select Device: your USB.
	•	Boot selection: Select the Fedora 42 ISO.
	•	Partition scheme: GPT.
	•	Target system: UEFI (non-CSM).
	•	Click START, choose “Write in ISO Image mode.”
	3.	After completion, label the USB as “Fedora42‑UEFI” with a permanent marker.
	4.	Repeat for any other OS (e.g., Debian Netinstall, Coreboot if packaged as ISO, Windows 11 ISO if you obtain from Microsoft).

⸻

Stage 5: Reflash ProBook BIOS & Reinstall Linux

5.1 Reflash BIOS Using FreeDOS Disc
	1.	Insert FreeDOS/BIOS Repair DVD into ProBook.
	2.	Boot and press F9/F10 until FreeDOS boot menu appears. Choose to boot into FreeDOS.
	3.	In FreeDOS prompt, navigate to the BIOS ISO or utility:

X:\> A:
A:\> cd BIOS
A:\BIOS> flash.exe /?   (or the executable that came with disc)


	4.	Run the flash utility, e.g.:

A:\BIOS> flash.exe BIOS.bin /force

	•	Follow on‑screen prompts. Ensure you do not power off during flash.

	5.	After flash completes successfully, power off, remove DVD.

5.2 Verify BIOS Integrity & Reset
	1.	Power on, press F10 to enter BIOS.
	2.	Set BIOS to Default Settings.
	3.	Ensure Secure Boot is Enabled, Legacy Boot is Disabled, TPM is Enabled (if planning Linux with Secure Boot).
	4.	Save and exit.

5.3 Reinstall Linux on ProBook
	1.	Insert Fedora42‑UEFI USB.
	2.	Boot: press ESC (or F9) → choose UEFI USB drive.
	3.	In Fedora installer:
	•	When asked for partitioning:
	•	Delete all existing partitions.
	•	Create a new EFI System Partition (512 MB, FAT32, mount /boot/efi).
	•	Create a root partition (≥20 GB, ext4) or / and a swap partition (if desired).
	•	Proceed with install.
	4.	Post-install, reboot into Fedora. Do not connect to Wi‑Fi or Bluetooth.

⸻

Stage 6: Build a Custom Router/Access Point

6.1 Identify & Salvage Hardware
	•	Old PC or Laptop (≥1 GHz CPU, ≥4 GB RAM, two NICs or 1 NIC + USB→Ethernet adapter).
	•	Old consumer router (check if supports custom firmware like OpenWRT/DD-WRT).
	•	USB to Ethernet adapters, spare switch, Ethernet cables.

6.2 Prepare the Router Machine
	1.	Wipe any old OS from the PC:
	•	Boot Fedora Live USB → open terminal:

sudo dd if=/dev/zero of=/dev/sda bs=4M status=progress


	•	Create new partitions for a minimal Linux or PfSense.

	2.	Download & Verify (on your new Windows workstation) onto USB:
	•	OpenWRT x86-64 image (if router PC is x86)
	•	pfSense CE (if hardware supports it)
	•	Debian Netinstall (for a DIY iptables/nftables router)
	3.	Install on the router PC:
	•	Plug in the USB installer.
	•	Boot into BIOS → disable Secure Boot (if necessary) → boot from USB.
	•	Follow on-screen instructions to install.

6.3 Configure VLANs & Firewall

Example with OpenWRT:
	1.	Connect WAN NIC to modem. Connect LAN NIC to a switch.
	2.	In LuCI (Web UI):
	•	Network → Switch: Create VLAN 10 (trusted), VLAN 20 (quarantine).
	•	Network → Interfaces: Assign VLAN 10 to br-lan, VLAN 20 to br-quarantine.
	•	Firewall → Traffic Rules:
	•	Allow br-lan → WAN (port 80,443, DNS).
	•	Block br-quarantine → br-lan.
	•	Restrict br-quarantine → WAN to DNS only (to prevent exfiltration).

Example with Debian Router:
	1.	Ensure iptables or nftables is installed.
	2.	Create /etc/network/interfaces entries for VLANs:

auto eth0.10
iface eth0.10 inet static
    address 10.0.10.1
    netmask 255.255.255.0
auto eth0.20
iface eth0.20 inet static
    address 10.0.20.1
    netmask 255.255.255.0


	3.	Configure firewall rules in /etc/iptables/rules.v4:

*filter
:INPUT ACCEPT [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
# Allow lan → wan
-A FORWARD -i eth0.10 -o eth1 -j ACCEPT
# Allow lan DNS
-A FORWARD -i eth0.20 -o eth1 -p udp --dport 53 -j ACCEPT
COMMIT



⸻

Stage 7: Network Segmentation & Secure Device Integration

7.1 VLAN Layout
	•	VLAN 10: Trusted Devices
	•	ProBook (Linux), Partner’s PC (Win11), eventual dedicated firewall/router.
	•	VLAN 20: Quarantine / Untrusted
	•	All other PCs, laptops, IoT, consoles, iPhones (initially).

7.2 DNS Sinkholing & Logs
	1.	Install Pi‑Hole or Unbound on VLAN 10 (could be on ProBook or separate Pi).
	2.	Configure DNS for VLAN 10 → Pi‑Hole (block known malicious domains).
	3.	Do not forward VLAN 20 DNS directly to Internet—force through Pi‑Hole or firewall logs.

7.3 Device Onboarding Process
	1.	ProBook & Partner’s PC
	•	Keep on VLAN 10.
	•	Only allow software from verified sources (signed packages).
	2.	Other Machines (once cleaned)
	•	Migrate to VLAN 10 only after verifying via checksums/GPG.
	3.	iPhones/iPads
	•	Keep in airplane mode until you can test on VLAN 10 via prepaid eSIM or secure DNS.

⸻

Stage 8: Quarantine, Analyze, & Restore Mobile Devices

8.1 Initial iPhone/iPad Quarantine
	1.	Backup & Export any critical data (notes, photos) to external drive—but only after virus scan on ProBook.
	2.	Remove all eSIM profiles (Settings → Cellular → Remove eSIM).
	3.	Factory Reset (Settings → General → Transfer or Reset → Erase All Content).
	4.	Do not log into iCloud on that device until network is clean.

8.2 Re‑Activation on Clean Network
	1.	Once VLAN 10 is operational with Pi‑Hole and firewall rules:
	•	Insert a prepaid eSIM into iPhone (Settings → Cellular → Add eSIM).
	•	Verify you can only reach known-good domains (e.g., apple.com, cloudflare-dns.com).
	2.	Monitor iOS Analytics (Settings → Privacy & Security → Analytics & Improvements).
	•	Look for suspicious process names or network pings.

8.3 Ongoing Mobile Hygiene
	•	Only install apps from App Store, not from unknown sources.
	•	Keep iOS updated from official Apple servers over the safe VLAN.
	•	Periodically check for rogue config profiles (Settings → General → VPN & Device Management).

⸻

Stage 9: Forensic Evidence Collection & Logging

9.1 Image Suspicious Drives
	1.	On ProBook or Partner’s PC:

sudo dd if=/dev/sdX of=/mnt/usb/hostname_dd_$(date +%F).img bs=4M status=progress
sha256sum /mnt/usb/hostname_dd_*.img > /mnt/usb/hostname_dd_*.img.sha256
gpg --armor --detach-sign /mnt/usb/hostname_dd_*.img.sha256


	2.	Label USB “FORENSICS” and store in secure location.

9.2 EFI & NVRAM Dumps
	1.	UEFI Shell on ProBook:

map -r
fs0:
cp fs0:\EFI\BOOT\bootx64.efi \mnt\usb\probook_bootx64.efi


	2.	On Linux, dump NVRAM:

sudo efibootmgr -v > /mnt/usb/efibootmgr_dump_$(date +%F).txt
sudo nvram -p > /mnt/usb/nvram_vars_$(date +%F).txt



9.3 Log Everything
	•	Router logs: Keep syslogs of all inbound/outbound attempts.
	•	ProBook logs: journalctl -b -1 > /mnt/usb/journal_pre-install.txt
	•	Win11 logs: Get-WinEvent -LogName System | Out-File C:\Users\Public\systemlog.txt

⸻

Alternative Methods & Fallbacks

4.1 If Windows 11 DVD Fails or Is Unavailable
	•	Use a friend’s or library PC briefly to download OS ISOs + signatures.
	•	Boot that PC into a minimal Linux Live USB (e.g., Puppy Linux) to run GPG + SHA checks.
	•	Transfer verified files to your Win11 workstation via a newly formatted USB.

4.2 If Partner’s PC Is Suspected Infected
	•	Test the Win11 DVD on ProBook (in UEFI mode) to see if installer is infected.
	•	If ProBook makes an install network call after DVD boot, skip and use a library PC instead.
	•	Alternatively, use the FreeDOS disc’s BIOS recovery mode first to attempt a BIOS flash, then reattempt Windows install.

4.3 If BIOS Reflash Fails on ProBook
	•	Consider external SPI programmer (CH341A) to reflash BIOS chip.
	•	If too complex, retire or store ProBook and switch to another old laptop (e.g., HP 8460p or ThinkPad T420).
	•	Use that replacement to reinstall clean OS.

4.4 If No Salvageable Hardware for Router/AP
	•	Purchase a used Raspberry Pi 4 (reachable under $50) from a reputable reseller (Adafruit, PiShop).
	•	Flash OpenWRT on an SD card and use as a DNS/firewall.
	•	Connect a cheap USB→Ethernet adapter to serve as a second NIC for VLANs.
	•	This Pi can act as a minimal router until you salvage a bigger machine.

4.5 If You Cannot Download on Phone or Public PC
	•	Use FreeDOS + mTCP to perform a plain-HTTP download as a last resort—with heavy caution.
	1.	Boot FreeDOS.
	2.	Load NIC drivers (mTCP package, e.g., packetdrvr.com).
	3.	Run wget or mftp to fetch ISO.
	4.	Verify only via paper-printed SHA-256 (compare manually).
	•	Accept that without TLS/GPG, this ISO cannot be fully trusted—limit its use to an offline staging environment until you can get a verified copy.

⸻

Budget‑Friendly Hardware & Sourcing Tips
	1.	Old Routers for Custom Firmware
	•	Look for Linksys WRT54G, TP-Link TL-WR1043ND, or early Netgear that support OpenWRT/DD-WRT.
	•	Often available used for under $20 on local marketplaces.
	2.	Second‑hand Laptops
	•	ThinkPad T420, T430, X220 often go for $50–$75.
	•	HP EliteBook 8460p/8470p similarly priced—good Coreboot/Libreboot support.
	3.	USB→Ethernet Adapters
	•	Realtek RTL8152/RTL8153–based adapters work well on Linux.
	•	Cost around $8–$12 new.
	4.	SPI Programmer
	•	A CH341A module kit costs $5–$10.
	•	Includes clip to reflash BIOS chips.
	5.	External Storage
	•	Buy 20 GB or 32 GB USB sticks in bulk (3–5 for $20) so each can be dedicated to a specific OS or data set.
	6.	Community College & Public Libraries
	•	Most offer guest Wi‑Fi for free.
	•	Often have PCs that can burn DVDs (ask for assistance from lab staff).

⸻

Final Checklist & Summary

General Pre‑Setup
	•	Collect all install media (Win11 DVD, FreeDOS/BIOS DVD).
	•	Label two blank USB sticks: “TOOLBOX” & “INSTALLER.”
	•	Bring ProBook, Partner’s PC, old hardware for router to a trusted location if possible.

Stage 1: Windows 11 Workstation
	•	Boot Partner’s PC from Win11 DVD.
	•	Delete all partitions, reinstall Win11 (local account only).
	•	Skip network connectivity during setup.

Stage 2: Hardening Win11
	•	Disable Wi‑Fi & Bluetooth in Device Manager.
	•	Disable unneeded services (Remote Registry, Update, etc.).
	•	Copy security tools from TOOLBOX USB: Gpg4win, coreutils, Sigcheck, TcpView.

Stage 3: Download & Verify ISOs
	•	Connect via Ethernet (prepaid hotspot or college LAN).
	•	Download Fedora 42 ISO + .sig + checksum.
	•	Import and verify GPG key & signature.
	•	Check SHA256 sum matches official.
	•	Repeat for Coreboot, Debian Netinstall, etc.

Stage 4: Create USB Installers
	•	Use Rufus Portable to burn Fedora ISO to INSTALLER USB.
	•	Label USB clearly (“Fedora42‑UEFI”).
	•	Repeat for any additional OSs.

Stage 5: ProBook BIOS & Linux
	•	Boot ProBook into FreeDOS.
	•	Reflash BIOS with BIOS ISO from USB.
	•	Reset BIOS defaults, enable Secure Boot.
	•	Boot from Fedora42‑UEFI USB, wipe drive, reinstall Fedora.
	•	Keep Fedora offline (disable Wi‑Fi/BT).

Stage 6: Custom Router/AP
	•	Wipe old router or PC for router use.
	•	Install OpenWRT or Debian minimal.
	•	Configure VLANs (Trusted: VLAN 10, Quarantine: VLAN 20).
	•	Set up Pi‑Hole or Unbound for DNS on VLAN 10.
	•	Block VLAN 20 from LAN and limit to DNS-only.

Stage 7: Network Segmentation
	•	Place ProBook & Partner’s PC on VLAN 10.
	•	Keep IoT, consoles, other laptops on VLAN 20 until cleaned.
	•	Roll out firewall rules to restrict east‑west traffic.

Stage 8: Mobile Device Quarantine
	•	Backup essential data to external drive (scan on ProBook).
	•	Remove eSIM from iPhone/iPad, factory Reset (offline).
	•	Only restore on VLAN 10 with prepaid eSIM once network is secure.

Stage 9: Forensic Collection
	•	Dump suspicious drives to USB with dd.
	•	Save SHA256 and GPG signatures for images.
	•	Collect EFI/SPI dumps with chipsec or flashrom on ProBook.
	•	Archive router logs and efibootmgr output.

⸻

Congratulations. You now have a full, printable, step‑by‑step guide to mitigate an advanced UEFI/BIOS compromise using only the resources you currently own, plus community college/public resources. Complete each stage in order, verify at every step, and keep detailed logs. This will allow you to rebuild a secure environment, one layer at a time—even on a tight budget. Good luck!
